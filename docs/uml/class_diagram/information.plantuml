@startuml

class MusicDataServiceFactory {
    + {static}MusicDataService getService();
}

class  SpotifyMusicDataSerivce

interface MusicDataService {
    + Callable<List<Track>> searchForTrack(String query)
    + Callable<Map<String, Artist>> getArtistsFromUris(List<String> artists)
    + Callable<Artist> getArtist(String artistUri)
    + Callable<Album> getAlbumFromUri(String albumUri)
    + Callable<Track> getTrackFromUri(String trackUri)
    + Callable<Map<String, Track>> getTracksFromUris(List<String> tracks)
}

package auth {
    class AccessTokenGenerator {
        {static} + String getNewToken()
    }
    class SpotifyAuthHelper {
        + String getAccessToken()
    }
    AccessTokenGenerator --> SpotifyAuthHelper
}
class ImageFetchTask
class MusicObjectFactory {
    {static} + Track createTrack(com.spotify.protocol.types.Track track)
    {static} + Track createTrack(kaes.spotify.webapi.android.models.Track track)
    {static} + Artist createArtist(com.spotify.protocol.types.Artist artist)
    {static} + Artist createArtist(ArtistSimple artist)
    {static} + Album createAlbum(com.spotify.protocol.types.Album album)
    {static} + Album createAlbum(kaaes.spotify.webapi.android.models.Album album)
}

MusicDataServiceFactory ..> AccessTokenGenerator
SpotifyMusicDataSerivce ..> MusicObjectFactory
SpotifyMusicDataSerivce ..> AccessTokenGenerator
MusicDataService <|-- SpotifyMusicDataSerivce
MusicDataServiceFactory ..> SpotifyMusicDataSerivce
MusicDataServiceFactory -> MusicDataService
@enduml